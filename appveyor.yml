image: Visual Studio 2019

init:
  - echo %PATH%
  # We use a clean PATH to avoid interferences with the hundreds of installed programs.
  - set PATH=c:/Program Files/Git/cmd;c:/Program Files (x86)/Inno Setup 6;c:/Windows/system32;C:/Windows/System32/WindowsPowerShell/v1.0
  - set PATH=C:/ruby%build_ruby%/bin;%PATH%
  - echo %PATH%
  - ruby --version
  - IF DEFINED DEPLOY_TAG (
      echo.%DEPLOY_TAG% | findstr /C:"%target_ruby%">nul || (echo stop build not required for release & (exit 1))
    )

install:
  # Avoid repo.msys2.org since it's down currently
  - c:\msys64\usr\bin\bash -lc "sed -e \"/repo.msys2.org/ s/Server/#Server/\" -i /etc/pacman.d/mirrorlist.*"
  - c:\msys64\usr\bin\bash -lc "cat /etc/pacman.d/mirrorlist.*"
  # Update keyring according to https://www.msys2.org/news/#2020-06-29-new-packagers
  - C:\msys64\usr\bin\curl -O http://mirror.yandex.ru/mirrors/msys2/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz
  - C:\msys64\usr\bin\curl -O http://mirror.yandex.ru/mirrors/msys2/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig
  - ridk exec bash -c "pacman-key --verify msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
  - ridk exec bash -c "pacman -U --noconfirm --config <(echo) msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
  # Remove gcc-ada and gcc-objc, since they are no longer supported by msys2 and therefore cause a dependency issue
  - C:\msys64\usr\bin\pacman --noconfirm --remove mingw-w64-i686-gcc-ada mingw-w64-i686-gcc-objc mingw-w64-x86_64-gcc-ada mingw-w64-x86_64-gcc-objc
  - C:\msys64\usr\bin\pacman --noconfirm --ask 20 --sync --refresh --refresh --sysupgrade --sysupgrade
  # Kill all running msys2 binaries to avoid error "size of shared memory region changed".
  # See https://github.com/msys2/MSYS2-packages/issues/258
  - powershell -Command "Get-Process | Where-Object {$_.path -like 'C:\msys64*'} | Stop-Process"
  # Avoid repo.msys2.org since it's down currently
  - c:\msys64\usr\bin\bash -lc "sed -e \"/repo.msys2.org/ s/Server/#Server/\" -i /etc/pacman.d/mirrorlist.*"
  - c:\msys64\usr\bin\bash -lc "cat /etc/pacman.d/mirrorlist.*"

build_script:
  # Remove broken pkg files from cache
  - c:/msys64/usr/bin/rm -f c:/msys64/var/cache/pacman/pkg/{pacman-mirrors}*
  # Build the installer
  - rake ri:ruby-%target_ruby%-%arch% & c:/msys64/usr/bin/gpgconf --homedir /etc/pacman.d/gnupg --kill all

  # Reuse installed ruby for RubyInstaller-Devkit
  - c:/msys64/usr/bin/mkdir -p packages/ri-msys/recipes/
  - c:/msys64/usr/bin/cp -a packages/ri/recipes/unpack packages/ri-msys/recipes/
  # Remove broken pkg files from cache
  - c:/msys64/usr/bin/rm -f c:/msys64/var/cache/pacman/pkg/{autoconf,automake,bash-completion,ca-certificates}*
  # Build the RubyInstaller-Devkit installer
  - rake ri-msys:ruby-%target_ruby%-%arch%:installer-inno

test_script:
  # Run the built Ruby installer and install to c:/ri2-ruby
  - ruby -e "Dir['packages/ri/recipes/installer-inno/rubyinstaller-%target_ruby%*-%arch%.exe'].each{|f| system(f, '/verysilent', '/dir=c:/ri2-ruby', '/tasks=assocfiles,modpath,defaultutf8')}"
  # Activate the environment variables set by the installer, but exclude
  # git's /usr/bin, because it conflicts with one RubyInstaller test.
  - ps: $env:PATH = [Environment]::GetEnvironmentVariable("PATH","Machine") -replace ";C:\\Program Files\\Git\\usr\\bin" -replace ";C:\\Ruby193\\bin"
  - ps: $env:RUBYOPT = [Environment]::GetEnvironmentVariable("RUBYOPT","Machine")
  - echo %PATH%
  - echo %RUBYOPT%
  - ridk version
  # Install dependent gems
  - IF "%target_ruby%" LSS "2.6" ( gem update --system && gem install bundler --force )
  # Remove lock file because bundler version can vary between build and runtime
  - del Gemfile.lock
  - bundle install
  # Run all tests against the new installed Ruby
  - rake test
  # Verify that the used CA list is still the latest.
  - rake ssl:update_check
  # Enable MSYS2 commands in cmd
  - ridk enable

  # Run the Ruby Spec Suite
  - IF DEFINED run_ruby_spec ( IF NOT DEFINED APPVEYOR_REPO_TAG_NAME (
      git clone --depth 1 https://github.com/ruby/mspec &&
      git clone --depth 1 https://github.com/ruby/spec &&
      env --unset=RUBYOPT ruby -C spec ../mspec/bin/mspec -I../../tool/lib -j --exclude "Socket.getnameinfo using IPv4 using a 3 element Array as the first argument without custom flags returns an Array containing the hostname and service name" --exclude "Socket.getifaddrs each returned Socket::Ifaddr has an interface index"
    ))

  # Run the MRI copy of Ruby Spec Suite
  - IF DEFINED run_mri_spec ( IF NOT DEFINED APPVEYOR_REPO_TAG_NAME (
      git clone --depth 1 https://github.com/ruby/ruby -b %run_mri_spec% &&
      env --unset=RUBYOPT ruby -C ruby/spec/ruby ../mspec/bin/mspec -I../../tool/lib -j --exclude "Socket.getnameinfo using IPv4 using a 3 element Array as the first argument without custom flags returns an Array containing the hostname and service name"
    ))

  # Run upload to github (only on tag builds)
  - set DEPLOY_TAG=%APPVEYOR_REPO_TAG_NAME%
  - IF "%target_ruby%" EQU "head" (SET DEPLOY_TAG=rubyinstaller-head)
  - rake release:appveyor_upload -- packages/ri/recipes/installer-inno/%DEPLOY_TAG%*-%arch%.exe packages/ri/recipes/archive-7z/%DEPLOY_TAG%*-%arch%.7z packages/ri-msys/recipes/installer-inno/ruby*-%target_ruby%*-%arch%.exe

# Provide the rubyinstaller.exe files for download
artifacts:
  - path: packages/ri/recipes/installer-inno/ruby*-$(target_ruby)*-$(arch).exe
    name: Executable installer
  - path: packages/ri/recipes/archive-7z/ruby*-$(target_ruby)*-$(arch).7z
    name: Plain archive file
  - path: packages/ri-msys/recipes/installer-inno/ruby*-$(target_ruby)*-$(arch).exe
    name: Executable installer with MYS2

environment:
  GPGPASSWD:
    secure: /DELcKSZC+R4HdXgsqR1RtC+IrDZ3Xut/vzV/KgepE3M8OsjJtmWutN0+Jvc2Iv2
  DEPLOY_REPO_NAME: oneclick/rubyinstaller2
  DEPLOY_TOKEN:
    secure: HIQ7Ovn+zMKskPWhnlYGvQMvdLPlZB5lhn62wzw0AUSno8UfntuTgFmPvS1pUwOW
  matrix:
    - target_ruby: "3.0.1"
      arch: "x86"
      build_ruby: "27"
      MINGW_PACKAGE_PREFIX: "mingw-w64-i686"
      MSYSTEM: "MINGW32"
      run_mri_spec: ruby_3_0

    - target_ruby: "3.0.1"
      arch: "x64"
      build_ruby: "27"
      MINGW_PACKAGE_PREFIX: "mingw-w64-x86_64"
      MSYSTEM: "MINGW64"
      run_mri_spec: ruby_3_0

    - target_ruby: "2.7.3"
      arch: "x86"
      build_ruby: "26"
      MINGW_PACKAGE_PREFIX: "mingw-w64-i686"
      MSYSTEM: "MINGW32"
      run_ruby_spec: true

    - target_ruby: "2.7.3"
      arch: "x64"
      build_ruby: "26"
      MINGW_PACKAGE_PREFIX: "mingw-w64-x86_64"
      MSYSTEM: "MINGW64"
      run_ruby_spec: true

    - target_ruby: "2.6.7"
      arch: "x64"
      build_ruby: "25"
      MINGW_PACKAGE_PREFIX: "mingw-w64-x86_64"
      MSYSTEM: "MINGW64"
      run_ruby_spec: true

    - target_ruby: "2.5.9"
      arch: "x64"
      build_ruby: "24"
      MINGW_PACKAGE_PREFIX: "mingw-w64-x86_64"
      MSYSTEM: "MINGW64"
      run_ruby_spec: true

    - target_ruby: "2.6.7"
      arch: "x86"
      build_ruby: "25"
      MINGW_PACKAGE_PREFIX: "mingw-w64-i686"
      MSYSTEM: "MINGW32"
      run_ruby_spec: true

    - target_ruby: "2.5.9"
      arch: "x86"
      build_ruby: "24"
      MINGW_PACKAGE_PREFIX: "mingw-w64-i686"
      MSYSTEM: "MINGW32"
      run_ruby_spec: true

    - target_ruby: "head"
      arch: "x64"
      build_ruby: "26"
      MINGW_PACKAGE_PREFIX: "mingw-w64-x86_64"
      MSYSTEM: "MINGW64"
      run_mri_spec: master

    - target_ruby: "head"
      arch: "x86"
      build_ruby: "26"
      MINGW_PACKAGE_PREFIX: "mingw-w64-i686"
      MSYSTEM: "MINGW32"
      run_mri_spec: master

matrix:
  allow_failures:
    - target_ruby: "2.5.9"
      arch: "x64"
